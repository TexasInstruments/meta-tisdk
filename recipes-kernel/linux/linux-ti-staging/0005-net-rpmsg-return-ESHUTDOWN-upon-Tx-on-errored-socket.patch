From 12ad72acf53df07310ca23a1cd01194147635259 Mon Sep 17 00:00:00 2001
From: Suman Anna <s-anna@ti.com>
Date: Sat, 5 Feb 2022 14:28:36 -0800
Subject: [PATCH 5/9] net/rpmsg: return ESHUTDOWN upon Tx on errored sockets

The rpmsg proto driver uses a single rpmsg channel device
published from a remote processor to transmit all socket-based
messages intended for that remote processor. This channel will
be auto-removed and recreated if the remote processor goes
through an error recovery process. Any connected sockets are
marked with an error status, and further transmissions on these
connected sockets should gracefully return an error. This error
condition is specifically checked for and a new error ESHUTDOWN
is returned back to userspace to differentiate it from
transmissions on an unconnected socket.

Signed-off-by: Suman Anna <s-anna@ti.com>
Signed-off-by: Drew Fustini <dfustini@baylibre.com>
(cherry picked from commit 1c8f70b02d83c6d1a71e9079805cedffccd04dcd)
Signed-off-by: Sinthu Raja <sinthu.raja@ti.com>
---
 net/rpmsg/rpmsg_proto.c | 6 ++++++
 1 file changed, 6 insertions(+)

diff --git a/net/rpmsg/rpmsg_proto.c b/net/rpmsg/rpmsg_proto.c
index 81fb55e341a7..c01cd9c2fd2c 100644
--- a/net/rpmsg/rpmsg_proto.c
+++ b/net/rpmsg/rpmsg_proto.c
@@ -173,6 +173,12 @@ static int rpmsg_sock_sendmsg(struct socket *sock, struct msghdr *msg,
 
 	lock_sock(sk);
 
+	/* we don't support Tx on errored-out sockets */
+	if (sk->sk_state == RPMSG_ERROR) {
+		release_sock(sk);
+		return -ESHUTDOWN;
+	}
+
 	/* we don't support loopback at this point */
 	if (sk->sk_state != RPMSG_CONNECTED) {
 		err = -ENOTCONN;
-- 
2.34.1

